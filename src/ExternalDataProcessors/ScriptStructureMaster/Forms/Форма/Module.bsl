
&НаКлиенте
Процедура ДеревоКомандПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элементы.ДеревоКоманд.ТекущиеДанные.КлючСвязи = Новый УникальныйИдентификатор();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоКомандПриАктивизацииСтроки(Элемент)
	
	ОтобразитьПараметрыТекущейКоманды();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПараметровПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ОтобразитьПараметрыТекущейКоманды();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьНастройку(Команда)
	
	ВыгрузитьНастройкаНаСервере()

КонецПроцедуры

&НаСервере
Функция ВыгрузитьНастройкаНаСервере()
	
	СтруктураВыгрузки = Новый Структура;
	ДеревоКомандОбъект = РеквизитФормыВЗначение("ДеревоКоманд");
	ТаблицаПараметровОбъект = РеквизитФормыВЗначение("ТаблицаПараметров");
	
	СтруктураВыгрузки.Вставить("ИмяПрограммы", Программа);
	СтруктураВыгрузки.Вставить("ИмяПрограммы", ВерсияПрограммы);
	СтруктураВыгрузки.Вставить("ДеревоКоманд", ДеревоКомандОбъект);
	СтруктураВыгрузки.Вставить("ТаблицаПараметров", ТаблицаПараметровОбъект);
	
	ЗаписьXML = Новый ЗаписьXML();
	ПараметрыЗаписиXML = Новый ПараметрыЗаписиXML("UTF-8", , Истина, Ложь);
	ЗаписьXML.УстановитьСтроку(ПараметрыЗаписиXML);
	
	СтруктураВXDTO = СериализаторXDTO.ЗаписатьXDTO(СтруктураВыгрузки);
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, СтруктураВXDTO);
	Результат = ЗаписьXML.Закрыть();
	
	АдресХранилища = ПоместитьВоВременноеХранилище(Результат);
	
	Возврат АдресХранилища;

КонецФункции

&НаСервере
Процедура ЗагрузитьНастройкуНаСервере(АдресХранилища)
	
	Результат = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	ЧтениеXML = Новый ЧтениеXML();
	ЧтениеXML.УстановитьСтроку(Результат);

	НовыйСериализаторXDTO = Новый СериализаторXDTO(ФабрикаXDTO);

	ПрочитанныеДанные = НовыйСериализаторXDTO.ПрочитатьXML(ЧтениеXML);
	ЧтениеXML.Закрыть();	
	
	ЗначениеВРеквизитФормы(ПрочитанныеДанные.ДеревоКоманд, "ДеревоКоманд");
	ЗначениеВРеквизитФормы(ПрочитанныеДанные.ТаблицаПараметров, "ТаблицаПараметров");
	
	Программа = ПрочитанныеДанные.Программа;
	ВерсияПрограммы = ПрочитанныеДанные.ВерсияПрограммы;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПараметровЗначенияАргументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметровФормы = Новый Структура();
	ТекущаяСтрокаКоманд = Элементы.ТаблицаПараметров.ТекущиеДанные;
	Если ТекущаяСтрокаКоманд = Неопределено Тогда
		ДанныеСпискаВыбора = Новый СписокЗначений();
		ДанныеСпискаВыбора.ТипЗначения = ПолучитьОписаниеТипаНаСерере(50);
	Иначе
		ДанныеСпискаВыбора = ТекущаяСтрокаКоманд.ЗначенияАргумента;
	КонецЕсли;
	
	СтруктураПараметровФормы.Вставить("СписокЗначенийАргумента", ДанныеСпискаВыбора);
	
	ОткрытьФорму("ВнешняяОбработка.ScriptStructureMaster.Форма.ФормаЗаполненияСписка", 
					СтруктураПараметровФормы, 
					Элемент, , , , ,
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройку(Команда)
	
	ЗагрузитьНастройкуНаСервере();

КонецПроцедуры




&НаСервере
Функция ПолучитьОписаниеТипаНаСерере(ДлинаСтроки)
	
	Возврат ОбщегоНазначения.ОписаниеТипаСтрока(ДлинаСтроки);
	
КонецФункции

&НаКлиенте
Процедура ТаблицаПараметровПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	
	Если Элементы.ДеревоКоманд.ТекущиеДанные = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ОтобразитьПараметрыТекущейКоманды()
	
	ТекущаяСтрокаКоманд = Элементы.ДеревоКоманд.ТекущиеДанные;
	Если ТекущаяСтрокаКоманд = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтборСтрок = Новый Структура("КлючСвязи", ТекущаяСтрокаКоманд.КлючСвязи);
	Элементы.ТаблицаПараметров.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
	
КонецПроцедуры


&НаКлиенте
Процедура ТаблицаПараметровПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НоваяСтрока Тогда
		Элементы.ТаблицаПараметров.ТекущиеДанные.КлючСвязи = Элементы.ДеревоКоманд.ТекущиеДанные.КлючСвязи;
	КонецЕсли;	

КонецПроцедуры

// @strict-types


#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Код процедур и функций



#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы //<ИмяТаблицыФормы>

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиКомандФормы

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти
